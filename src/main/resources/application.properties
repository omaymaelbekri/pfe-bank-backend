# App Properties
server.port= 8085

# Setting Swagger v3
springdoc.packages-to-scan=com.ramadan.api.controller
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
# Swagger UI configuration
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.display-operations-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.default-model-rendering=example
springdoc.swagger-ui.deep-linking=true
springdoc.swagger-ui.default-model-expand-depth=1
springdoc.swagger-ui.default-model-expand=list
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.disable-repositories=true
springdoc.swagger-ui.disable-uris=true

server.forward-headers-strategy=framework

BASE-URL-SWAGGER = http://localhost:${server.port}
#Data base
spring.datasource.url=jdbc:postgresql://localhost:5432/compte
spring.datasource.username=postgres
spring.datasource.password=Omayma
spring.jpa.database=POSTGRESQL
# Show or not log for each sql query
spring.jpa.show-sql = true
logging.level.org.hibernate.SQL=error
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = false
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

#Base Url of My Application
# BASE URL
URL-BASE=/api/v1/ramadan

# KeyCloak configuration for login endpoint
keycloak.enabled = true
keycloak.realm = FileRouge
keycloak.resource = file_rouge
keycloak.admin.ressource = client_admin
keycloak.admin.secret = fmRkBUaH7CO6qfbrSewgmHpcrY65dUPr

#keycloak.credentials.secret = null
keycloak.auth-server-url =http://localhost:8080
keycloak.ssl-required = none
keycloak.disable-trust-manager = true
keycloak.use-resource-role-mappings = false

#Keycloak Endpoint's
#Token
bff_keycloak.token-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
keycloak.logout.url = ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/logout
keyloack.userinfo.url =${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
keyloack.introspection_endpoint =${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token/introspect
keycloack.creat_user.url = ${keycloak.auth-server-url}/admin/realms/${keycloak.realm}/users
keycloack.update_user.url = ${keycloak.auth-server-url}/admin/realms/${keycloak.realm}/users/
keycloack.email.verifie.url =${keycloak.auth-server-url}/admin/realms/${keycloak.realm}/users/
keycloack.reset_password.url = ${keycloak.auth-server-url}/admin/realms/${keycloak.realm}/users
keycloack.role-mappings.url =${keycloak.auth-server-url}/admin/realms/${keycloak.realm}/users
role-mappings.url =role-mappings/realm
keycloack.email.redirect_uri = http://localhost:${server.port}
keycloack.role-id = e5ffb6dc-7fce-4925-894d-5cba1ef1ad3c
spring.servlet.multipart.maxFileSize=5242880
spring.servlet.multipart.maxRequestSize=5242880
